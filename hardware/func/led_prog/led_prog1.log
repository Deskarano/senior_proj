KCPSM6 Assembler log file for program 'C:\Users\grego\Projects\fpga\picoblaze_test\picoblaze_test.srcs\programs\led_prog\led_prog1.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 22 Mar 2019
Assembly timestamp: 18:55:42

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 99
Memory locations available: 3997


Assembly listing

 Addr Code                       Instruction

 000                             CONSTANT out_uart_data, 00000001'b
 000                             CONSTANT out_mem_addr, 00000010'b
 000                             CONSTANT out_mem_data_p0, 00000011'b
 000                             CONSTANT out_mem_data_p1, 00001011'b
 000                             CONSTANT out_leds, 00000100'b
 000                             CONSTANT in_uart_data, 01
 000                             CONSTANT in_uart_status, 02
 000                             CONSTANT in_mem_data, 03
 000                             CONSTANT tx_data_present, 00100000'b
 000                             CONSTANT tx_buffer_half, 00010000'b
 000                             CONSTANT tx_buffer_full, 00001000'b
 000                             CONSTANT rx_data_present, 00000100'b
 000                             CONSTANT rx_buffer_half, 00000010'b
 000                             CONSTANT rx_buffer_full, 00000001'b
 000                             ; Register mapping
 000                             ; s0 - stack pointer (points to next empty)
 000                             ; s1 - stack reg
 000                             ; s2 - uart reg
 000                             ; s3 - mem reg 1
 000                             ; s4 - mem reg 2
 000                             ; s5 - mem reg 3 (parity)
 000                             ; s6 - leds
 000                             ; s7, s8, s9 - led counters
 000                             ; others - misc
 000                       init: 
 000  01000                      LOAD s0, 00
 001  01100                      LOAD s1, 00
 002  01200                      LOAD s2, 00
 003  01300                      LOAD s3, 00
 004  01400                      LOAD s4, 00
 005  01500                      LOAD s5, 00
 006  01600                      LOAD s6, 00
 007  28001                      ENABLE INTERRUPT
 008                       main: 
 008  2D604                      OUTPUT s6, 04[out_leds]
 009  2000F                      CALL 00F[wait]
 00A  11601                      ADD s6, 01
 00B  1D610                      COMPARE s6, 10[00010000'b]
 00C  36008                      JUMP NZ, 008[main]
 00D  01600                      LOAD s6, 00
 00E  22008                      JUMP 008[main]
 00F                       wait: 
 00F  01700                      LOAD s7, 00
 010  01800                      LOAD s8, 00
 011  01900                      LOAD s9, 00
 012                wait_loop_1: 
 012  11701                      ADD s7, 01
 013  1D7FF                      COMPARE s7, FF
 014  36012                      JUMP NZ, 012[wait_loop_1]
 015  01700                      LOAD s7, 00
 016  11801                      ADD s8, 01
 017                wait_loop_2: 
 017  1D8FF                      COMPARE s8, FF
 018  36012                      JUMP NZ, 012[wait_loop_1]
 019  01700                      LOAD s7, 00
 01A  01800                      LOAD s8, 00
 01B  11901                      ADD s9, 01
 01C                wait_loop_3: 
 01C  1D9FF                      COMPARE s9, FF
 01D  36012                      JUMP NZ, 012[wait_loop_1]
 01E  01700                      LOAD s7, 00
 01F  01800                      LOAD s8, 00
 020  01900                      LOAD s9, 00
 021  25000                      RETURN 
 022                             ; interrupt register mapping
 022                             ; s0 - UART data in
 022                             ; s9 - data 0
 022                             ; sA - data 1
 022                             ; sB - parity
 022                             ; sC - address counter 0
 022                             ; sD - address counter 1
 022                             ; sE - target address 0
 022                             ; sF - target address 1
 7BF                             ADDRESS 7BF
 7BF                     reprog: 
 7BF  2B0F4                      OUTPUTK 0F, 4[out_leds]
 7C0  37001                      REGBANK B
 7C1              reprog_addr_1: 
 7C1  09E02                      INPUT sE, 02[in_uart_status]
 7C2  03E04                      AND sE, 04[rx_data_present]
 7C3  327C1                      JUMP Z, 7C1[reprog_addr_1]
 7C4  09E01                      INPUT sE, 01[in_uart_data]
 7C5              reprog_addr_2: 
 7C5  09F02                      INPUT sF, 02[in_uart_status]
 7C6  03F04                      AND sF, 04[rx_data_present]
 7C7  327C5                      JUMP Z, 7C5[reprog_addr_2]
 7C8  09F01                      INPUT sF, 01[in_uart_data]
 7C9                             STRING addr_str$, "addr"
 7C9  2B611                      OUTPUTK 61[addr_str$:"a"], 1[out_uart_data]
 7CA  2B641                      OUTPUTK 64[addr_str$:"d"], 1[out_uart_data]
 7CB  2B641                      OUTPUTK 64[addr_str$:"d"], 1[out_uart_data]
 7CC  2B721                      OUTPUTK 72[addr_str$:"r"], 1[out_uart_data]
 7CD  01C00                      LOAD sC, 00
 7CE  01D00                      LOAD sD, 00
 7CF              reprog_data_1: 
 7CF                             ; wait for 3 data bytes: [data] [data] [parity]
 7CF  09902                      INPUT s9, 02[in_uart_status]
 7D0  03904                      AND s9, 04[rx_data_present]
 7D1  327CF                      JUMP Z, 7CF[reprog_data_1]
 7D2  09901                      INPUT s9, 01[in_uart_data]
 7D3              reprog_data_2: 
 7D3  09A02                      INPUT sA, 02[in_uart_status]
 7D4  03A04                      AND sA, 04[rx_data_present]
 7D5  327D3                      JUMP Z, 7D3[reprog_data_2]
 7D6  09A01                      INPUT sA, 01[in_uart_data]
 7D7              reprog_data_3: 
 7D7  09B02                      INPUT sB, 02[in_uart_status]
 7D8  03B04                      AND sB, 04[rx_data_present]
 7D9  327D7                      JUMP Z, 7D7[reprog_data_3]
 7DA  09B01                      INPUT sB, 01[in_uart_data]
 7DB                             STRING data_str$, "data"
 7DB  2B641                      OUTPUTK 64[data_str$:"d"], 1[out_uart_data]
 7DC  2B611                      OUTPUTK 61[data_str$:"a"], 1[out_uart_data]
 7DD  2B741                      OUTPUTK 74[data_str$:"t"], 1[out_uart_data]
 7DE  2B611                      OUTPUTK 61[data_str$:"a"], 1[out_uart_data]
 7DF               reprog_write: 
 7DF                             ; output byte depending on parity
 7DF  0DB01                      TEST sB, 01[00000001'b]
 7E0  367E3                      JUMP NZ, 7E3[reprog_write_d1_p1]
 7E1  2D903                      OUTPUT s9, 03[out_mem_data_p0]
 7E2  227E4                      JUMP 7E4[reprog_write_d2]
 7E3         reprog_write_d1_p1: 
 7E3  2D90B                      OUTPUT s9, 0B[out_mem_data_p1]
 7E4            reprog_write_d2: 
 7E4  0DB02                      TEST sB, 02[00000010'b]
 7E5  367E8                      JUMP NZ, 7E8[reprog_write_d2_p1]
 7E6  2DA03                      OUTPUT sA, 03[out_mem_data_p0]
 7E7  227E9                      JUMP 7E9[reprog_write_addr]
 7E8         reprog_write_d2_p1: 
 7E8  2DA0B                      OUTPUT sA, 0B[out_mem_data_p1]
 7E9          reprog_write_addr: 
 7E9                             ; write those as well
 7E9  2DC02                      OUTPUT sC, 02[out_mem_addr]
 7EA  2DD02                      OUTPUT sD, 02[out_mem_addr]
 7EB                             STRING done_str$, "done"
 7EB  2B641                      OUTPUTK 64[done_str$:"d"], 1[out_uart_data]
 7EC  2B6F1                      OUTPUTK 6F[done_str$:"o"], 1[out_uart_data]
 7ED  2B6E1                      OUTPUTK 6E[done_str$:"n"], 1[out_uart_data]
 7EE  2B651                      OUTPUTK 65[done_str$:"e"], 1[out_uart_data]
 7EF                             ; increment and check addresses
 7EF  11C01                      ADD sC, 01
 7F0  1DC00                      COMPARE sC, 00                               ; only happens if overflow occured, in which case need to increment other counter
 7F1  367F6                      JUMP NZ, 7F6[reprog_loop_check]
 7F2  11D01                      ADD sD, 01
 7F3           reprog_uart_wait: 
 7F3  09002                      INPUT s0, 02[in_uart_status]
 7F4  03020                      AND s0, 20[tx_data_present]
 7F5  367F3                      JUMP NZ, 7F3[reprog_uart_wait]
 7F6          reprog_loop_check: 
 7F6  1CDF0                      COMPARE sD, sF
 7F7  367CF                      JUMP NZ, 7CF[reprog_data_1]
 7F8  1CCE0                      COMPARE sC, sE
 7F9  367CF                      JUMP NZ, 7CF[reprog_data_1]
 7FA                             STRING reset_str$, "rest"
 7FA  2B721                      OUTPUTK 72[reset_str$:"r"], 1[out_uart_data]
 7FB  2B651                      OUTPUTK 65[reset_str$:"e"], 1[out_uart_data]
 7FC  2B731                      OUTPUTK 73[reset_str$:"s"], 1[out_uart_data]
 7FD  2B741                      OUTPUTK 74[reset_str$:"t"], 1[out_uart_data]
 7FE  2B004                      OUTPUTK 00, 4[out_leds]
 7FF  29001                      RETURNI ENABLE


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\grego\Projects\fpga\picoblaze_test\picoblaze_test.srcs\programs\led_prog\led_prog1.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   18'd         
 timestamp_minutes 55'd         
 timestamp_seconds 42'd         
 datestamp_year    19'd         
 datestamp_month   3'd          
 datestamp_day     22'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 out_uart_data     00000001'b   led_prog1.psm
 out_mem_addr      00000010'b   led_prog1.psm
 out_mem_data_p0   00000011'b   led_prog1.psm
 out_mem_data_p1   00001011'b   led_prog1.psm
 out_leds          00000100'b   led_prog1.psm
 in_uart_data      01           led_prog1.psm
 in_uart_status    02           led_prog1.psm
 in_mem_data       03           led_prog1.psm
 tx_data_present   00100000'b   led_prog1.psm
 tx_buffer_half    00010000'b   led_prog1.psm
 tx_buffer_full    00001000'b   led_prog1.psm
 rx_data_present   00000100'b   led_prog1.psm
 rx_buffer_half    00000010'b   led_prog1.psm
 rx_buffer_full    00000001'b   led_prog1.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "22 Mar 2019"  
 timestamp$        "18:55:42"     
 addr_str$         "addr"         led_prog1.psm
 data_str$         "data"         led_prog1.psm
 done_str$         "done"         led_prog1.psm
 reset_str$        "rest"         led_prog1.psm



List of line labels

   Label                Addr  Source PSM File

 * init                 000   led_prog1.psm
   main                 008   led_prog1.psm
   wait                 00F   led_prog1.psm
   wait_loop_1          012   led_prog1.psm
 * wait_loop_2          017   led_prog1.psm
 * wait_loop_3          01C   led_prog1.psm
 * reprog               7BF   led_prog1.psm
   reprog_addr_1        7C1   led_prog1.psm
   reprog_addr_2        7C5   led_prog1.psm
   reprog_data_1        7CF   led_prog1.psm
   reprog_data_2        7D3   led_prog1.psm
   reprog_data_3        7D7   led_prog1.psm
 * reprog_write         7DF   led_prog1.psm
   reprog_write_d1_p1   7E3   led_prog1.psm
   reprog_write_d2      7E4   led_prog1.psm
   reprog_write_d2_p1   7E8   led_prog1.psm
   reprog_write_addr    7E9   led_prog1.psm
   reprog_uart_wait     7F3   led_prog1.psm
   reprog_loop_check    7F6   led_prog1.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             19
 STAR              -

 AND               6
 OR                -
 XOR               -

 ADD               6
 ADDCY             -
 SUB               -
 SUBCY             -

 TEST              2
 TESTCY            -
 COMPARE           7
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           1

 INPUT            11
 OUTPUT            7
 OUTPUTK          18

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             18
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            1
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
